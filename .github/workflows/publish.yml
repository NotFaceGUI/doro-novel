name: 'publish'

on:
  push:
    tags:
      - 'v*' # 推送以 v 开头的标签时触发，如 v1.0.0
    branches:
      - main
      - release

# This workflow will trigger on each push to the `main` or `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.


jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: pnpm install

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Debug environment variables
        run: |
          echo "TAURI_SIGNING_PRIVATE_KEY length: $($env:TAURI_SIGNING_PRIVATE_KEY.Length)"
          echo "TAURI_SIGNING_PRIVATE_KEY_PASSWORD length: $($env:TAURI_SIGNING_PRIVATE_KEY_PASSWORD.Length)"
          if ($env:TAURI_SIGNING_PRIVATE_KEY) {
            echo "TAURI_SIGNING_PRIVATE_KEY is set"
          } else {
            echo "TAURI_SIGNING_PRIVATE_KEY is NOT set"
          }
          if ($env:TAURI_SIGNING_PRIVATE_KEY_PASSWORD) {
            echo "TAURI_SIGNING_PRIVATE_KEY_PASSWORD is set"
          } else {
            echo "TAURI_SIGNING_PRIVATE_KEY_PASSWORD is NOT set"
          }
        shell: pwsh
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__ # the action automatically replaces __VERSION__ with the app version.
          releaseName: 'Doro Novel v__VERSION__'
          releaseBody: |
            ## What's Changed
            
            See the assets below to download this version and install.
            
            ### Installation
            - **Windows**: Download the `.msi` installer
            - **macOS**: Download the `.dmg` file
            - **Linux**: Download the `.AppImage` or `.deb` file
            
            ### Auto Update
            The app supports automatic updates. You'll be notified when a new version is available.
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          updaterJsonPreferNsis: false
          updaterJsonKeepUniversal: false
          args: ${{ matrix.args }}